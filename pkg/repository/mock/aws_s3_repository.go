// Code generated by MockGen. DO NOT EDIT.
// Source: aws_s3_repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAWSS3RepositoryInterface is a mock of AWSS3RepositoryInterface interface.
type MockAWSS3RepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAWSS3RepositoryInterfaceMockRecorder
}

// MockAWSS3RepositoryInterfaceMockRecorder is the mock recorder for MockAWSS3RepositoryInterface.
type MockAWSS3RepositoryInterfaceMockRecorder struct {
	mock *MockAWSS3RepositoryInterface
}

// NewMockAWSS3RepositoryInterface creates a new mock instance.
func NewMockAWSS3RepositoryInterface(ctrl *gomock.Controller) *MockAWSS3RepositoryInterface {
	mock := &MockAWSS3RepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockAWSS3RepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAWSS3RepositoryInterface) EXPECT() *MockAWSS3RepositoryInterfaceMockRecorder {
	return m.recorder
}

// GetObject mocks base method.
func (m *MockAWSS3RepositoryInterface) GetObject(bucket, path string) io.ReaderAt {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObject", bucket, path)
	ret0, _ := ret[0].(io.ReaderAt)
	return ret0
}

// GetObject indicates an expected call of GetObject.
func (mr *MockAWSS3RepositoryInterfaceMockRecorder) GetObject(bucket, path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObject", reflect.TypeOf((*MockAWSS3RepositoryInterface)(nil).GetObject), bucket, path)
}
